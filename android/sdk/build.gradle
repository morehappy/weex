buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.2'
        classpath files('license/license-gradle-plugin-0.12.1.jar')
        classpath files('license/maven-license-plugin-1.10.b1.jar')
        classpath files('license/plexus-utils-3.0.24.jar')
        classpath 'com.vanniktech:gradle-android-junit-jacoco-plugin:0.5.0'
    }
}


allprojects {
    repositories {
        mavenCentral()
        jcenter()
    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.github.hierynomus.license'
apply plugin: 'com.vanniktech.android.junit.jacoco'

version = "1.5.2.4"

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"
    resourcePrefix "weex"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
        versionCode 1
        versionName "1.0"
        ndk {
            abiFilters "armeabi","x86"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            testCoverageEnabled true
        }
    }

    sourceSets {
        main {
            assets.srcDirs = ['assets']
            jniLibs.srcDir(['libs'])
            java {
                srcDirs = ["src/main/java"];
            }
        }
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    compileOptions.encoding = "UTF-8"
    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    testOptions {
        unitTests.all {
            jvmArgs += ['-XX:-UseSplitVerifier', '-noverify','-Xverify:none']/* fix VerifyError  */
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    provided 'com.android.support:recyclerview-v7:23.1.1'
    provided 'com.android.support:support-v4:23.1.1'
    provided 'com.android.support:appcompat-v7:23.1.1'
    provided 'com.alibaba:fastjson:1.1.46.android'

    testCompile 'com.alibaba:fastjson:1.1.46.android'
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-core:1.3'
    testCompile 'org.javassist:javassist:3.20.0-GA'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'org.objenesis:objenesis:2.1'
    testCompile 'org.powermock:powermock-core:1.6.4'
    testCompile 'org.powermock:powermock-api-mockito:1.6.4'
    testCompile 'org.powermock:powermock-module-junit4-common:1.6.4'
    testCompile 'org.powermock:powermock-module-junit4:1.6.4'
    testCompile 'org.powermock:powermock-module-junit4-legacy:1.6.4'
    testCompile 'org.powermock:powermock-module-testng:1.6.4'
    testCompile 'org.powermock:powermock-classloading-xstream:1.6.4'
    testCompile "org.powermock:powermock-module-junit4-rule:1.6.4"
    testCompile 'org.robolectric:robolectric:3.0-rc3'
    testCompile 'org.json:json:20160212'
}

license{
    header=file('license/LICENSE')
    excludes (["**/WXDataStructureUtil.java",
               "**/WXBackgroundDrawable.java",
               "**/Spacing.java",
               "**/MeasureOutput.java",
               "**/LayoutEngine.java",
               "**/FloatUtil.java",
               "**/CSSWrap.java",
               "**/CSSStyle.java",
               "**/CSSPositionType.java",
               "**/CSSNode.java",
               "**/CSSLayoutContext.java",
               "**/CSSLayout.java",
               "**/CSSJustify.java",
               "**/CSSFlexDirection.java",
               "**/CSSDirection.java",
               "**/CSSConstants.java",
               "**/CSSAlign.java",
               "**/CachedCSSLayout.java",
               "**/CSSAlignConvert.java",
               "**/CSSFlexDirectionConvert.java",
               "**/CSSJustifyConvert.java",
               "**/CSSPositionTypeConvert.java",
               "**/CSSTransformFromStyle.java",
               "**/CSSWrapConvert.java",
               "**/WXTextDomObject.java",
               "**/WXCustomStyleSpan.java"])
}
preBuild.dependsOn licenseFormat

task wrapper(type: Wrapper) {
    gradleVersion = '2.10'
}